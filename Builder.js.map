{"version":3,"sources":["Builder.js"],"names":["type","formatCode","str","options","text","filePath","__dirname","Builder","constructor","model","koaServer","socketIO","senecaClient","senecaServer","customerErrors","templateDir","targetDir","yj","disableLock","skipInstall","Object","assign","packageRequired","indexUseList","fileMap","appendPackageRequired","name","packageName","test","indexOf","push","projectCp","src","dist","srcPath","distPath","stats","isDirectory","dir","isFile","createComponent","configurations","components","map","config","use","cp","value","package","dependencies","createPackageJson","pkg","devDependencies","p","JSON","stringify","buildPackage","cmd","join","replace","cpBase","Promise","all","cpDirs","ensureTargetDir","buildComponents","requiredComponents","error","key","buildConfigFile","keys","buildIndexJs","forEach","item","alias","useName","buildYJ","yjDelDirs","yjCpDirs","cpPath","run","echoText","console","info"],"mappings":"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","sourcesContent":["import Promise from 'bluebird';\nimport { merge } from 'lodash';\nimport { resolve as pathResolve, parse as pathParse } from 'path';\nimport format from 'prettier-eslint';\nimport { camelize } from 'humps';\nimport { writeFile, readJson, ensureFile, ensureDir, stat } from 'fs-extra';\nimport { components, cpDirs, yjDelDirs, yjCpDirs, packageRequired } from './constants';\nimport { parseName } from './package-info-parser';\nimport { exec } from './util';\n\nconst type = 'ts';\n\nfunction formatCode(str) {\n  const options = {\n    text: str,\n    filePath: pathResolve(__dirname, '../.eslintrc.js'),\n  };\n\n  return format(options);\n}\n\nclass Builder {\n  constructor({\n    model,\n    koaServer,\n    socketIO,\n    senecaClient,\n    senecaServer,\n    customerErrors,\n    templateDir,\n    targetDir,\n    yj,\n    disableLock = true,\n    skipInstall = false,\n  }) {\n    Object.assign(this, {\n      model,\n      koaServer,\n      socketIO,\n      senecaClient,\n      senecaServer,\n      customerErrors,\n      templateDir,\n      targetDir,\n      yj,\n      disableLock,\n      skipInstall,\n    });\n\n    this.packageRequired = [];\n    this.indexUseList = [];\n    this.fileMap = {};\n    this.packageRequired = packageRequired;\n  }\n\n  appendPackageRequired(name) {\n    let packageName = name;\n    if (/^ofa2-/.test(name)) {\n      packageName = `@ofa2/${name}`;\n    }\n\n    if (this.packageRequired.indexOf(packageName) === -1) {\n      this.packageRequired.push(packageName);\n    }\n  }\n\n  async projectCp(src, dist = src) {\n    let srcPath = pathResolve(this.templateDir, src);\n    let distPath = pathResolve(this.targetDir, dist);\n\n    let stats = await stat(srcPath);\n    if (stats.isDirectory()) {\n      let { dir } = await pathParse(distPath);\n      await ensureDir(dir);\n      await exec(`cp -r ${srcPath} ${distPath}`);\n    }\n    else if (stats.isFile()) {\n      await ensureFile(distPath);\n      await exec(`cp ${srcPath} ${distPath}`);\n    }\n    return null;\n  }\n\n  async createComponent(name) {\n    let configurations = components[name];\n\n    configurations.map((config) => {\n      if (config.use) {\n        this.indexUseList.push(config);\n        this.appendPackageRequired(config.use);\n        return null;\n      }\n\n      if (config.cp) {\n        if (config.cp.src) {\n          return this.projectCp(config.cp.src, config.cp.dist);\n        }\n\n        return this.projectCp(config.cp);\n      }\n\n      if (config.src && config.value) {\n        if (typeof config.value === 'string') {\n          this.fileMap[config.src] = this.fileMap[config.src] || '';\n          this.fileMap[config.src] = `${this.fileMap[config.src]}\\n${config.value}`;\n          return null;\n        }\n\n        this.fileMap[config.src] = this.fileMap[config.src] || {};\n        this.fileMap[config.src] = merge(this.fileMap[config.src], config.value);\n        return null;\n      }\n\n      if (config.package) {\n        this.appendPackageRequired(config.package);\n        return null;\n      }\n\n      if (config.dependencies) {\n        this.packageRequired.push(...config.dependencies);\n        return null;\n      }\n\n      return null;\n    });\n  }\n\n  async createPackageJson() {\n    let { name } = pathParse(this.targetDir);\n    let pkg = await readJson(pathResolve(this.templateDir, 'package.json'));\n    pkg.name = name;\n    pkg.dependencies = {};\n\n    delete pkg.devDependencies['@s4p/eslint-config'];\n    delete pkg.devDependencies['@ofa2/eslint-config-ofa2'];\n\n    if (this.yj) {\n      pkg.dependencies['@ofa2/eslint-config'] = '^2.0.0';\n    }\n    else {\n      pkg.dependencies['@s4p/eslint-config'] = '^2.0.1';\n    }\n\n    let p = pathResolve(this.targetDir, 'package.json');\n    await writeFile(p, JSON.stringify(pkg, null, 2));\n  }\n\n  async buildPackage() {\n    await this.createPackageJson();\n\n    let cmd = `cd ${this.targetDir} && npm i ${this.packageRequired.join(' ')}`;\n\n    if (this.skipInstall) {\n      return cmd.replace(/.*?&& npm i/, `cd ${this.targetDir}/server && npm i`);\n    }\n    await exec(cmd);\n    return null;\n  }\n\n  async cpBase() {\n    await Promise.all(cpDirs.map((src) => {\n      return this.projectCp(src);\n    }));\n  }\n\n  async ensureTargetDir() {\n    await ensureDir(this.targetDir);\n  }\n\n  async buildComponents() {\n    let requiredComponents = ['als', 'config', 'log'];\n\n    if (this.customerErrors) {\n      let packageName = await parseName(this.customerErrors);\n      components.error = [\n        {\n          src: `src/config/error.${type}`,\n          value: `\n    import buildError from '@ofa2/ofa2-error';\n    import errors from '${packageName}';\n\n    errors.UnknownError = 'unknown error, need feedback';\n    errors.ParamsRequired = 'params required';\n\n    global.Errors = buildError(errors);\n    `,\n        },\n        {\n          dependencies: [this.customerErrors],\n        },\n      ];\n      requiredComponents.push('error');\n    }\n\n    // mongoose model\n    if (this.model) {\n      requiredComponents.push(...['model']);\n    }\n\n    if (this.koaServer) {\n      requiredComponents.push(...['koa', 'koaController', 'koaPolicy', 'koaRoute', 'koaServer']);\n    }\n\n    if (this.socketIO) {\n      requiredComponents.push(...['socketIO']);\n    }\n\n    if (this.senecaClient) {\n      requiredComponents.push(...['seneca', 'senecaClient', 'senecaWrapAct']);\n    }\n\n    if (this.senecaServer) {\n      // senecaClient may had add seneca\n      if (requiredComponents.indexOf('seneca') === -1) {\n        requiredComponents.push('seneca');\n      }\n\n      requiredComponents.push(...['senecaController', 'senecaRoute', 'senecaServer']);\n    }\n\n    requiredComponents.push(...['shutdown']);\n\n    await Promise.all(requiredComponents.map((key) => {\n      return this.createComponent(key);\n    }));\n  }\n\n  async buildConfigFile() {\n    await Promise.all(Object.keys(this.fileMap).map(async (key) => {\n      let str = '';\n\n      if (typeof this.fileMap[key] === 'string') {\n        str = this.fileMap[key];\n      }\n      else {\n        str = `export default\\n${JSON.stringify(this.fileMap[key], null, 2)}`;\n      }\n\n      let p = pathResolve(this.targetDir, key);\n      await ensureFile(p);\n      writeFile(p, formatCode(str));\n    }));\n  }\n\n  async buildIndexJs() {\n    let str = `\n  import Ofa2 from '@ofa2/ofa2';\n  `;\n\n    this.indexUseList.forEach((item) => {\n      if (/^ofa2/.test(item.use)) {\n        item.use = `@ofa2/${item.use}`;\n      }\n\n      if (item.alias) {\n        return;\n      }\n\n      item.alias = camelize(item.use.replace(/^@ofa2\\/ofa2/, ''));\n    });\n\n    this.indexUseList.forEach((item) => {\n      str += `import ${item.alias} from '${item.use}';`;\n    });\n    str += `\n  import pkg from '../package.json';\n\n  const app = new Ofa2(__dirname)\n  `;\n    this.indexUseList.forEach((item) => {\n      str += `.use(${item.useName || item.alias})`;\n    });\n\n    str += `\n  .on('lifted', () => {\n    logger.info(\\`\\${pkg.name} lifted\\`);\n    logger.info('config: ', app.config);\n  })\n  .on('error', (e) => {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    process.exit(1);\n  })\n  .lift();\n\n  export { app };\n  `;\n\n    await writeFile(pathResolve(this.targetDir, `src/index.${type}`), formatCode(str));\n  }\n\n  async buildYJ() {\n    if (!this.yj) {\n      return null;\n    }\n\n    await Promise.all(yjDelDirs.map((dir) => {\n      return exec(`cd ${this.targetDir} && rm -rf ${dir}`);\n    }));\n\n    await exec(`cd ${this.targetDir} && mkdir -p server && ls -A | grep -v server | xargs -I {} mv {} server`);\n\n    await Promise.all(yjCpDirs.map((dir) => {\n      let cpPath = pathResolve(this.yj, dir);\n      return exec(`cp -rf ${cpPath} ${this.targetDir}`);\n    }));\n\n    return null;\n  }\n\n  async run() {\n    await this.ensureTargetDir();\n    await this.cpBase();\n    await this.buildComponents();\n    await this.buildConfigFile();\n    await this.buildIndexJs();\n    let echoText = await this.buildPackage();\n    await this.buildYJ();\n\n    if (echoText) {\n      console.info('====== you need run next cmd =======');\n      console.info(echoText);\n    }\n  }\n}\n\nexport default Builder;\n"],"file":"Builder.js"}