{"version":3,"sources":["Builder.js"],"names":["type","formatCode","str","options","text","filePath","__dirname","Builder","constructor","model","koaServer","socketIO","senecaClient","senecaServer","customerErrors","templateDir","targetDir","yj","disableLock","skipInstall","Object","assign","packageRequired","indexUseList","fileMap","appendPackageRequired","name","packageName","test","indexOf","push","projectCp","src","dist","srcPath","distPath","stats","isDirectory","dir","isFile","createComponent","configurations","components","map","config","use","cp","value","package","dependencies","createPackageJson","pkg","p","JSON","stringify","buildPackage","lockPath","isExists","cmd","join","replace","cpBase","Promise","all","cpDirs","ensureTargetDir","buildComponents","requiredComponents","error","key","buildConfigFile","keys","buildIndexJs","forEach","item","alias","useName","buildYJ","yjDelDirs","yjCpDirs","cpPath","run","echoText","console","info"],"mappings":"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","sourcesContent":["import Promise from 'bluebird';\nimport { merge } from 'lodash';\nimport { resolve as pathResolve, parse as pathParse } from 'path';\nimport format from 'prettier-eslint';\nimport { camelize } from 'humps';\nimport { writeFile, readJson, ensureFile, ensureDir, stat } from 'fs-extra';\nimport { components, cpDirs, yjDelDirs, yjCpDirs, packageRequired } from './constants';\nimport { getLockPath } from './yarn-lock/index';\nimport { parseName } from './package-info-parser';\nimport { exec } from './util';\n\nconst type = 'ts';\n\nfunction formatCode(str) {\n  const options = {\n    text: str,\n    filePath: pathResolve(__dirname, '../.eslintrc.js'),\n  };\n\n  return format(options);\n}\n\nclass Builder {\n  constructor({\n    model,\n    koaServer,\n    socketIO,\n    senecaClient,\n    senecaServer,\n    customerErrors,\n    templateDir,\n    targetDir,\n    yj,\n    disableLock = false,\n    skipInstall = false,\n  }) {\n    Object.assign(this, {\n      model,\n      koaServer,\n      socketIO,\n      senecaClient,\n      senecaServer,\n      customerErrors,\n      templateDir,\n      targetDir,\n      yj,\n      disableLock,\n      skipInstall,\n    });\n\n    this.packageRequired = [];\n    this.indexUseList = [];\n    this.fileMap = {};\n    this.packageRequired = packageRequired;\n  }\n\n  appendPackageRequired(name) {\n    let packageName = name;\n    if (/^ofa2-/.test(name)) {\n      packageName = `@ofa2/${name}`;\n    }\n\n    if (this.packageRequired.indexOf(packageName) === -1) {\n      this.packageRequired.push(packageName);\n    }\n  }\n\n  async projectCp(src, dist = src) {\n    let srcPath = pathResolve(this.templateDir, src);\n    let distPath = pathResolve(this.targetDir, dist);\n\n    let stats = await stat(srcPath);\n    if (stats.isDirectory()) {\n      let { dir } = await pathParse(distPath);\n      await ensureDir(dir);\n      await exec(`cp -r ${srcPath} ${distPath}`);\n    }\n    else if (stats.isFile()) {\n      await ensureFile(distPath);\n      await exec(`cp ${srcPath} ${distPath}`);\n    }\n    return null;\n  }\n\n  async createComponent(name) {\n    let configurations = components[name];\n\n    configurations.map((config) => {\n      if (config.use) {\n        this.indexUseList.push(config);\n        this.appendPackageRequired(config.use);\n        return null;\n      }\n\n      if (config.cp) {\n        if (config.cp.src) {\n          return this.projectCp(config.cp.src, config.cp.dist);\n        }\n\n        return this.projectCp(config.cp);\n      }\n\n      if (config.src && config.value) {\n        if (typeof config.value === 'string') {\n          this.fileMap[config.src] = this.fileMap[config.src] || '';\n          this.fileMap[config.src] = `${this.fileMap[config.src]}\\n${config.value}`;\n          return null;\n        }\n\n        this.fileMap[config.src] = this.fileMap[config.src] || {};\n        this.fileMap[config.src] = merge(this.fileMap[config.src], config.value);\n        return null;\n      }\n\n      if (config.package) {\n        this.appendPackageRequired(config.package);\n        return null;\n      }\n\n      if (config.dependencies) {\n        this.packageRequired.push(...config.dependencies);\n        return null;\n      }\n\n      return null;\n    });\n  }\n\n  async createPackageJson() {\n    let { name } = pathParse(this.targetDir);\n    let pkg = await readJson(pathResolve(this.templateDir, 'package.json'));\n    pkg.name = name;\n    pkg.dependencies = {};\n\n    let p = pathResolve(this.targetDir, 'package.json');\n    await writeFile(p, JSON.stringify(pkg, null, 2));\n  }\n\n  async buildPackage() {\n    await this.createPackageJson();\n    let { lockPath, isExists } = await getLockPath(this);\n    if (!this.disableLock && isExists) {\n      await exec(`cp ${lockPath} ${pathResolve(this.targetDir, 'yarn.lock')}`);\n    }\n\n    let cmd = `cd ${this.targetDir} && yarnpkg add ${this.packageRequired.join(' ')}`;\n\n    if (this.skipInstall) {\n      return cmd.replace(/.*?&& yarnpkg add/, 'yarnpkg add');\n    }\n    await exec(cmd);\n    return null;\n  }\n\n  async cpBase() {\n    await Promise.all(cpDirs.map((src) => {\n      return this.projectCp(src);\n    }));\n  }\n\n  async ensureTargetDir() {\n    await ensureDir(this.targetDir);\n  }\n\n  async buildComponents() {\n    let requiredComponents = ['als', 'config', 'log'];\n\n    if (this.customerErrors) {\n      let packageName = await parseName(this.customerErrors);\n      components.error = [\n        {\n          src: `src/config/error.${type}`,\n          value: `\n    import buildError from '@ofa2/ofa2-error';\n    import errors from '${packageName}';\n\n    errors.UnknownError = 'unknown error, need feedback';\n    errors.ParamsRequired = 'params required';\n\n    global.Errors = buildError(errors);\n    `,\n        },\n        {\n          dependencies: [this.customerErrors],\n        },\n      ];\n      requiredComponents.push('error');\n    }\n\n    // mongoose model\n    if (this.model) {\n      requiredComponents.push(...['model']);\n    }\n\n    if (this.koaServer) {\n      requiredComponents.push(...['koa', 'koaController', 'koaPolicy', 'koaRoute', 'koaServer']);\n    }\n\n    if (this.socketIO) {\n      requiredComponents.push(...['socketIO']);\n    }\n\n    if (this.senecaClient) {\n      requiredComponents.push(...['seneca', 'senecaClient', 'senecaWrapAct']);\n    }\n\n    if (this.senecaServer) {\n      // senecaClient may had add seneca\n      if (requiredComponents.indexOf('seneca') === -1) {\n        requiredComponents.push('seneca');\n      }\n\n      requiredComponents.push(...['senecaController', 'senecaRoute', 'senecaServer']);\n    }\n\n    requiredComponents.push(...['shutdown']);\n\n    await Promise.all(requiredComponents.map((key) => {\n      return this.createComponent(key);\n    }));\n  }\n\n  async buildConfigFile() {\n    await Promise.all(Object.keys(this.fileMap).map(async (key) => {\n      let str = '';\n\n      if (typeof this.fileMap[key] === 'string') {\n        str = this.fileMap[key];\n      }\n      else {\n        str = `export default\\n${JSON.stringify(this.fileMap[key], null, 2)}`;\n      }\n\n      let p = pathResolve(this.targetDir, key);\n      await ensureFile(p);\n      writeFile(p, formatCode(str));\n    }));\n  }\n\n  async buildIndexJs() {\n    let str = `\n  import Ofa2 from '@ofa2/ofa2';\n  `;\n\n    this.indexUseList.forEach((item) => {\n      if (/^ofa2/.test(item.use)) {\n        item.use = `@ofa2/${item.use}`;\n      }\n\n      if (item.alias) {\n        return;\n      }\n\n      item.alias = camelize(item.use.replace(/^@ofa2\\/ofa2/, ''));\n    });\n\n    this.indexUseList.forEach((item) => {\n      str += `import ${item.alias} from '${item.use}';`;\n    });\n    str += `\n  import pkg from '../package.json';\n\n  const app = new Ofa2(__dirname)\n  `;\n    this.indexUseList.forEach((item) => {\n      str += `.use(${item.useName || item.alias})`;\n    });\n\n    str += `\n  .on('lifted', () => {\n    logger.info(\\`\\${pkg.name} lifted\\`);\n    logger.info('config: ', app.config);\n  })\n  .on('error', (e) => {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    process.exit(1);\n  })\n  .lift();\n  `;\n\n    await writeFile(pathResolve(this.targetDir, `src/index.${type}`), formatCode(str));\n  }\n\n  async buildYJ() {\n    if (!this.yj) {\n      return null;\n    }\n\n    await Promise.all(yjDelDirs.map((dir) => {\n      return exec(`cd ${this.targetDir} && rm -rf ${dir}`);\n    }));\n\n    await exec(`cd ${this.targetDir} && mkdir -p server && ls -A | grep -v server | xargs -I {} mv {} server`);\n\n    await Promise.all(yjCpDirs.map((dir) => {\n      let cpPath = pathResolve(this.yj, dir);\n      return exec(`cp -rf ${cpPath} ${this.targetDir}`);\n    }));\n\n    return null;\n  }\n\n  async run() {\n    await this.ensureTargetDir();\n    await this.cpBase();\n    await this.buildComponents();\n    await this.buildConfigFile();\n    await this.buildIndexJs();\n    let echoText = await this.buildPackage();\n    await this.buildYJ();\n\n    if (echoText) {\n      console.info('====== you need run next cmd =======');\n      console.info(echoText);\n    }\n  }\n}\n\nexport default Builder;\n"],"file":"Builder.js"}