{"version":3,"sources":["Builder.js"],"names":["exec","cmd","opt","console","info","Promise","resolve","reject","child","Object","assign","shell","stdio","on","err","code","formatCode","str","options","text","filePath","__dirname","Builder","constructor","model","koaServer","senecaClient","senecaServer","customerErrors","templateDir","targetDir","disableLock","packageRequired","indexUseList","fileMap","appendPackageRequired","name","packageName","test","indexOf","push","projectCp","src","dist","srcPath","distPath","stats","isDirectory","dir","isFile","createComponent","configurations","components","map","config","use","cp","value","package","dependencies","createPackageJson","pkg","p","JSON","stringify","buildPackage","lockPath","join","log","cpBase","all","cpDirs","ensureTargetDir","buildComponents","requiredComponents","error","key","buildConfigFile","keys","buildIndexJs","forEach","item","alias","replace","useName","run"],"mappings":"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","sourcesContent":["import Promise from 'bluebird';\nimport { merge } from 'lodash';\nimport { spawn } from 'child_process';\nimport { resolve as pathResolve, parse as pathParse } from 'path';\nimport format from 'prettier-eslint';\nimport { camelize } from 'humps';\nimport { writeFile, readJson, ensureFile, ensureDir, stat } from 'fs-extra';\nimport { components, cpDirs } from './constants';\nimport { getLockPath } from './yarn-lock/index';\nimport { parseName } from './package-info-parser';\n\nfunction exec(cmd, opt = {}) {\n  console.info(cmd);\n  return new Promise((resolve, reject) => {\n    let child = spawn(\n      cmd,\n      Object.assign(\n        {\n          shell: true,\n          stdio: 'inherit',\n        },\n        opt\n      )\n    );\n\n    child.on('error', (err) => {\n      reject(err);\n    });\n\n    child.on('close', (code) => {\n      if (code === 0) {\n        resolve(code);\n      }\n      reject(code);\n    });\n  });\n}\n\nfunction formatCode(str) {\n  const options = {\n    text: str,\n    filePath: pathResolve(__dirname, '../.eslintrc.js'),\n  };\n\n  return format(options);\n}\n\nclass Builder {\n  constructor({\n    model,\n    koaServer,\n    senecaClient,\n    senecaServer,\n    customerErrors,\n    templateDir,\n    targetDir,\n    disableLock = false,\n  }) {\n    Object.assign(this, {\n      model,\n      koaServer,\n      senecaClient,\n      senecaServer,\n      customerErrors,\n      templateDir,\n      targetDir,\n      disableLock,\n    });\n\n    this.packageRequired = [];\n    this.indexUseList = [];\n    this.fileMap = {};\n    this.packageRequired = ['bluebird', 'lodash', '@ofa2/ofa2', '@ofa2/ofa2-error'];\n  }\n\n  appendPackageRequired(name) {\n    let packageName = name;\n    if (/^ofa2-/.test(name)) {\n      packageName = `@ofa2/${name}`;\n    }\n\n    if (this.packageRequired.indexOf(packageName) === -1) {\n      this.packageRequired.push(packageName);\n    }\n  }\n\n  async projectCp(src, dist = src) {\n    let srcPath = pathResolve(this.templateDir, src);\n    let distPath = pathResolve(this.targetDir, dist);\n\n    let stats = await stat(srcPath);\n    if (stats.isDirectory()) {\n      let { dir } = await pathParse(distPath);\n      await ensureDir(dir);\n      await exec(`cp -r ${srcPath} ${distPath}`);\n    }\n    else if (stats.isFile()) {\n      await ensureFile(distPath);\n      await exec(`cp ${srcPath} ${distPath}`);\n    }\n    return null;\n  }\n\n  async createComponent(name) {\n    let configurations = components[name];\n\n    configurations.map((config) => {\n      if (config.use) {\n        this.indexUseList.push(config);\n        this.appendPackageRequired(config.use);\n        return null;\n      }\n\n      if (config.cp) {\n        if (config.cp.src) {\n          return this.projectCp(config.cp.src, config.cp.dist);\n        }\n\n        return this.projectCp(config.cp);\n      }\n\n      if (config.src && config.value) {\n        if (typeof config.value === 'string') {\n          this.fileMap[config.src] = this.fileMap[config.src] || '';\n          this.fileMap[config.src] = `${this.fileMap[config.src]}\\n${config.value}`;\n          return null;\n        }\n\n        this.fileMap[config.src] = this.fileMap[config.src] || {};\n        this.fileMap[config.src] = merge(this.fileMap[config.src], config.value);\n        return null;\n      }\n\n      if (config.package) {\n        this.appendPackageRequired(config.package);\n        return null;\n      }\n\n      if (config.dependencies) {\n        this.packageRequired.push(...config.dependencies);\n        return null;\n      }\n\n      return null;\n    });\n  }\n\n  async createPackageJson() {\n    let { name } = pathParse(this.targetDir);\n    let pkg = await readJson(pathResolve(this.templateDir, 'package.json'));\n    pkg.name = name;\n    pkg.dependencies = {};\n\n    let p = pathResolve(this.targetDir, 'package.json');\n    await writeFile(p, JSON.stringify(pkg, null, 2));\n  }\n\n  async buildPackage() {\n    await this.createPackageJson();\n    let lockPath = await getLockPath(this);\n    if (!this.disableLock && lockPath) {\n      await exec(`cp ${lockPath} ${pathResolve(this.targetDir, 'yarn.lock')}`);\n    }\n\n    let cmd = `cd ${this.targetDir} && yarnpkg add ${this.packageRequired.join(' ')}`;\n    console.log(cmd);\n    await exec(cmd);\n  }\n\n  async cpBase() {\n    await Promise.all(cpDirs.map((src) => {\n      return this.projectCp(src);\n    }));\n  }\n\n  async ensureTargetDir() {\n    await ensureDir(this.targetDir);\n  }\n\n  async buildComponents() {\n    let requiredComponents = ['als', 'config', 'log'];\n\n    if (this.customerErrors) {\n      let packageName = await parseName(this.customerErrors);\n      components.error = [\n        {\n          src: 'src/config/error.js',\n          value: `\n    import buildError from '@ofa2/ofa2-error';\n    import errors from '${packageName}';\n    \n    global.Errors = buildError(errors);\n    `,\n        },\n        {\n          dependencies: [this.customerErrors],\n        },\n      ];\n      requiredComponents.push('error');\n    }\n\n    // mongoose model\n    if (this.model) {\n      requiredComponents.push(...['model']);\n    }\n\n    if (this.koaServer) {\n      requiredComponents.push(...['koa', 'koaController', 'koaPolicy', 'koaRoute', 'koaServer']);\n    }\n\n    if (this.senecaClient) {\n      requiredComponents.push(...['seneca', 'senecaClient', 'senecaWrapAct']);\n    }\n\n    if (this.senecaServer) {\n      // senecaClient may had add seneca\n      if (requiredComponents.indexOf('seneca') === -1) {\n        requiredComponents.push('seneca');\n      }\n\n      requiredComponents.push(...['senecaController', 'senecaRoute', 'senecaServer']);\n    }\n\n    requiredComponents.push(...['shutdown']);\n\n    await Promise.all(requiredComponents.map((key) => {\n      return this.createComponent(key);\n    }));\n  }\n\n  async buildConfigFile() {\n    await Promise.all(Object.keys(this.fileMap).map(async (key) => {\n      let str = '';\n\n      if (typeof this.fileMap[key] === 'string') {\n        str = this.fileMap[key];\n      }\n      else {\n        str = `export default\\n${JSON.stringify(this.fileMap[key], null, 2)}`;\n      }\n\n      let p = pathResolve(this.targetDir, key);\n      await ensureFile(p);\n      writeFile(p, formatCode(str));\n    }));\n  }\n\n  async buildIndexJs() {\n    let str = `\n  import Ofa2 from '@ofa2/ofa2';\n  `;\n\n    this.indexUseList.forEach((item) => {\n      if (/^ofa2/.test(item.use)) {\n        item.use = `@ofa2/${item.use}`;\n      }\n\n      if (item.alias) {\n        return;\n      }\n\n      item.alias = camelize(item.use.replace(/^@ofa2\\/ofa2/, ''));\n    });\n\n    this.indexUseList.forEach((item) => {\n      str += `import ${item.alias} from '${item.use}';`;\n    });\n    str += `\n  import pkg from '../package.json';\n\n  const app = new Ofa2(__dirname)\n  `;\n    this.indexUseList.forEach((item) => {\n      str += `.use(${item.useName || item.alias})`;\n    });\n\n    str += `\n  .on('lifted', () => {\n    logger.info(\\`\\${pkg.name} lifted\\`);\n    logger.info('config: ', app.config);\n  })\n  .on('error', (e) => {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    process.exit(1);\n  })\n  .lift();\n  `;\n\n    await writeFile(pathResolve(this.targetDir, 'src/index.js'), formatCode(str));\n  }\n\n  async run() {\n    await this.ensureTargetDir();\n    await this.cpBase();\n    await this.buildComponents();\n    await this.buildConfigFile();\n    await this.buildIndexJs();\n    await this.buildPackage();\n  }\n}\n\nexport default Builder;\n"],"file":"Builder.js"}