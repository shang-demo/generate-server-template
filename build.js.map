{"version":3,"sources":["build.js"],"names":["templateDir","__dirname","indexUseList","fileMap","packageRequired","ensureDir","p","dir","ensureFile","projectCp","targetDir","src","dist","srcPath","distPath","appendPackageRequired","name","packageName","test","indexOf","push","createComponent","configurations","components","map","config","use","cp","value","package","dependencies","createPackageJson","pkgStr","pkg","JSON","parse","stringify","formatCode","str","options","text","filePath","getPackageRequired","sort","buildPackage","model","koaServer","senecaClient","senecaServer","customerErrors","lockPath","cmd","join","console","log","cpBase","Promise","all","cpDirs","ensureTargetDir","buildComponents","requiredComponents","error","key","buildConfigFile","Object","keys","buildIndexJs","forEach","item","alias","replace","useName"],"mappings":"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","sourcesContent":["import Promise from 'bluebird';\nimport { merge } from 'lodash';\nimport { exec, cp, mkdir, touch } from 'shelljs';\nimport { resolve as pathResolve, parse as pathParse } from 'path';\nimport format from 'prettier-eslint';\nimport { camelize } from 'humps';\nimport { writeFile, readFile } from 'fs-extra';\nimport { components, cpDirs } from './constants';\nimport { getLockPath } from './yarn-lock/index';\nimport { parseName } from './package-info-parser';\n\nconst templateDir = pathResolve(__dirname, '../../server-template');\n\nconst indexUseList = [];\nconst fileMap = {};\nconst packageRequired = ['bluebird', 'lodash', '@ofa2/ofa2', '@ofa2/ofa2-error'];\n\nasync function ensureDir(p) {\n  let { dir } = pathParse(p);\n  mkdir('-p', dir);\n}\n\nasync function ensureFile(p) {\n  await ensureDir(p);\n  touch(p);\n}\n\nasync function projectCp(targetDir, src, dist = src) {\n  let srcPath = pathResolve(templateDir, src);\n  let distPath = pathResolve(targetDir, dist);\n\n  await ensureDir(distPath);\n  // console.info(`cp -r ${srcPath}, ${distPath}`);\n  return cp('-r', srcPath, distPath);\n}\n\nfunction appendPackageRequired(name) {\n  let packageName = name;\n  if (/^ofa2-/.test(name)) {\n    packageName = `@ofa2/${name}`;\n  }\n\n  if (packageRequired.indexOf(packageName) === -1) {\n    packageRequired.push(packageName);\n  }\n}\n\nasync function createComponent(targetDir, name) {\n  let configurations = components[name];\n\n  configurations.map((config) => {\n    if (config.use) {\n      indexUseList.push(config);\n      appendPackageRequired(config.use);\n      return null;\n    }\n\n    if (config.cp) {\n      if (config.cp.src) {\n        return projectCp(targetDir, config.cp.src, config.cp.dist);\n      }\n\n      return projectCp(targetDir, config.cp);\n    }\n\n    if (config.src && config.value) {\n      if (typeof config.value === 'string') {\n        fileMap[config.src] = fileMap[config.src] || '';\n        fileMap[config.src] = `${fileMap[config.src]}\\n${config.value}`;\n        return null;\n      }\n\n      fileMap[config.src] = fileMap[config.src] || {};\n      fileMap[config.src] = merge(fileMap[config.src], config.value);\n      return null;\n    }\n\n    if (config.package) {\n      appendPackageRequired(config.package);\n      return null;\n    }\n\n    if (config.dependencies) {\n      packageRequired.push(...config.dependencies);\n      return null;\n    }\n\n    return null;\n  });\n}\n\nasync function createPackageJson(targetDir) {\n  let { name } = pathParse(targetDir);\n  let pkgStr = await readFile(pathResolve(templateDir, 'package.json'));\n  let pkg = JSON.parse(pkgStr);\n\n  pkg.name = name;\n\n  pkg.dependencies = {};\n\n  let p = pathResolve(targetDir, 'package.json');\n  await ensureFile(p);\n  await writeFile(p, JSON.stringify(pkg, null, 2));\n}\n\nfunction formatCode(str) {\n  const options = {\n    text: str,\n    filePath: pathResolve(__dirname, '../.eslintrc.js'),\n  };\n\n  return format(options);\n}\n\nasync function getPackageRequired() {\n  packageRequired.sort();\n  return packageRequired;\n}\n\nasync function buildPackage(\n  targetDir,\n  {\n    model, koaServer, senecaClient, senecaServer, customerErrors,\n  }\n) {\n  await createPackageJson(targetDir);\n  let lockPath = await getLockPath({\n    model,\n    koaServer,\n    senecaClient,\n    senecaServer,\n    customerErrors,\n  });\n\n  if (lockPath) {\n    cp(lockPath, pathResolve(targetDir, 'yarn.lock'));\n  }\n\n  let cmd = `cd ${targetDir} && yarnpkg add ${packageRequired.join(' ')}`;\n  console.log(cmd);\n  await exec(cmd);\n}\n\nasync function cpBase(targetDir) {\n  // copy dirs\n  await Promise.all(cpDirs.map((src) => {\n    return projectCp(targetDir, src);\n  }));\n}\n\nasync function ensureTargetDir(targetDir) {\n  await exec(`mkdir -p ${targetDir}`);\n}\n\nasync function buildComponents(\n  targetDir,\n  {\n    model, koaServer, senecaClient, senecaServer, customerErrors,\n  }\n) {\n  let requiredComponents = ['als', 'config', 'log'];\n\n  if (customerErrors) {\n    let packageName = await parseName(customerErrors);\n    components.error = [\n      {\n        src: 'src/config/error.js',\n        value: `\n    import buildError from '@ofa2/ofa2-error';\n    import errors from '${packageName}';\n    \n    global.Errors = buildError(errors);\n    `,\n      },\n      {\n        dependencies: [customerErrors],\n      },\n    ];\n    requiredComponents.push('error');\n  }\n\n  // mongoose model\n  if (model) {\n    requiredComponents.push(...['model']);\n  }\n\n  if (koaServer) {\n    requiredComponents.push(...['koa', 'koaController', 'koaPolicy', 'koaRoute', 'koaServer']);\n  }\n\n  if (senecaClient) {\n    requiredComponents.push(...['seneca', 'senecaClient', 'senecaWrapAct']);\n  }\n\n  if (senecaServer) {\n    // senecaClient may had add seneca\n    if (requiredComponents.indexOf('seneca') === -1) {\n      requiredComponents.push('seneca');\n    }\n\n    requiredComponents.push(...['senecaController', 'senecaRoute', 'senecaServer']);\n  }\n\n  requiredComponents.push(...['shutdown']);\n\n  await Promise.all(requiredComponents.map((key) => {\n    return createComponent(targetDir, key);\n  }));\n}\n\nasync function buildConfigFile(targetDir) {\n  await Promise.all(Object.keys(fileMap).map(async (key) => {\n    let str = '';\n\n    if (typeof fileMap[key] === 'string') {\n      str = fileMap[key];\n    }\n    else {\n      str = `export default\\n${JSON.stringify(fileMap[key], null, 2)}`;\n    }\n\n    let p = pathResolve(targetDir, key);\n\n    await ensureFile(p);\n    writeFile(p, formatCode(str));\n  }));\n}\n\nasync function buildIndexJs(targetDir) {\n  let str = `\n  import Ofa2 from '@ofa2/ofa2';\n  `;\n\n  indexUseList.forEach((item) => {\n    if (/^ofa2/.test(item.use)) {\n      item.use = `@ofa2/${item.use}`;\n    }\n\n    if (item.alias) {\n      return;\n    }\n\n    item.alias = camelize(item.use.replace(/^@ofa2\\/ofa2/, ''));\n  });\n\n  indexUseList.forEach((item) => {\n    str += `import ${item.alias} from '${item.use}';`;\n  });\n  str += `\n  import pkg from '../package.json';\n\n  const app = new Ofa2(__dirname)\n  `;\n  indexUseList.forEach((item) => {\n    str += `.use(${item.useName || item.alias})`;\n  });\n\n  str += `\n  .on('lifted', () => {\n    logger.info(\\`\\${pkg.name} lifted\\`);\n    logger.info('config: ', app.config);\n  })\n  .on('error', (e) => {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    process.exit(1);\n  })\n  .lift();\n  `;\n\n  await writeFile(pathResolve(targetDir, 'src/index.js'), formatCode(str));\n}\n\nexport {\n  ensureTargetDir,\n  cpBase,\n  buildComponents,\n  buildConfigFile,\n  buildIndexJs,\n  buildPackage,\n  getPackageRequired,\n};\n\nexport default {\n  ensureTargetDir,\n  cpBase,\n  buildComponents,\n  buildConfigFile,\n  buildIndexJs,\n  buildPackage,\n  getPackageRequired,\n};\n"],"file":"build.js"}