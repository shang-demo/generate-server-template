{"version":3,"sources":["yarn-lock/index.js"],"names":["checkExists","p","e","getLockName","str","hash","crypto","createHash","update","digest","getLockPath","model","koaServer","senecaClient","senecaServer","customerErrors","name","join","console","info","file","__dirname","isExists"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,eAAeA,WAAf,CAA2BC,CAA3B,EAA8B;AAC5B,MAAI;AACF,UAAM,mBAAKA,CAAL,CAAN;AACA,WAAO,IAAP;AACD,GAHD,CAIA,OAAOC,CAAP,EAAU;AACR,WAAO,KAAP;AACD;AACF;;AAED,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,QAAMC,OAAOC,gBAAOC,UAAP,CAAkB,QAAlB,CAAb;;AACAF,OAAKG,MAAL,CAAYJ,GAAZ;AACA,SAAOC,KAAKI,MAAL,CAAY,KAAZ,CAAP;AACD;;AAED,eAAeC,WAAf,CAA2B;AACzBC,OADyB;AAClBC,WADkB;AACPC,cADO;AACOC,cADP;AACqBC;AADrB,CAA3B,EAEG;AACD,MAAIC,OAAOb,YAAY,CAACQ,KAAD,EAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,YAAjC,EAA+CC,cAA/C,EAA+DE,IAA/D,CAAoE,GAApE,CAAZ,CAAX;AACAC,UAAQC,IAAR,CAAa,kBAAb,EAAiCH,IAAjC;AAEA,MAAII,OAAO,mBAAYC,SAAZ,EAAuBL,IAAvB,CAAX;AACA,MAAIM,WAAW,MAAMtB,YAAYoB,IAAZ,CAArB;;AAEA,MAAIE,QAAJ,EAAc;AACZ,WAAOF,IAAP;AACD;;AAED,SAAO,IAAP;AACD;;eAGcV,W","sourcesContent":["import crypto from 'crypto';\nimport { stat } from 'fs-extra';\nimport { resolve as pathResolve } from 'path';\n\nasync function checkExists(p) {\n  try {\n    await stat(p);\n    return true;\n  }\n  catch (e) {\n    return false;\n  }\n}\n\nfunction getLockName(str) {\n  const hash = crypto.createHash('sha256');\n  hash.update(str);\n  return hash.digest('hex');\n}\n\nasync function getLockPath({\n  model, koaServer, senecaClient, senecaServer, customerErrors,\n}) {\n  let name = getLockName([model, koaServer, senecaClient, senecaServer, customerErrors].join('|'));\n  console.info('lock file name: ', name);\n\n  let file = pathResolve(__dirname, name);\n  let isExists = await checkExists(file);\n\n  if (isExists) {\n    return file;\n  }\n\n  return null;\n}\n\nexport { getLockName, getLockPath };\nexport default getLockPath;\n"],"file":"index.js"}