{"version":3,"sources":["yarn-lock/index.js"],"names":["isExists","p","e","getLockName","str","hash","crypto","createHash","update","digest","getLockPath","model","koaServer","senecaClient","senecaServer","customerErrors","name","join","console","info","file","__dirname"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,eAAeA,QAAf,CAAwBC,CAAxB,EAA2B;AACzB,MAAI;AACF,UAAM,mBAAKA,CAAL,CAAN;AACA,WAAO,IAAP;AACD,GAHD,CAIA,OAAOC,CAAP,EAAU;AACR,WAAO,KAAP;AACD;AACF;;AAED,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,QAAMC,OAAOC,gBAAOC,UAAP,CAAkB,QAAlB,CAAb;;AACAF,OAAKG,MAAL,CAAYJ,GAAZ;AACA,SAAOC,KAAKI,MAAL,CAAY,KAAZ,CAAP;AACD;;AAED,SAASC,WAAT,CAAqB;AACnBC,OADmB;AACZC,WADY;AACDC,cADC;AACaC,cADb;AAC2BC;AAD3B,CAArB,EAEG;AACD,MAAIC,OAAOb,YAAY,CAACQ,KAAD,EAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,YAAjC,EAA+CC,cAA/C,EAA+DE,IAA/D,CAAoE,GAApE,CAAZ,CAAX;AACAC,UAAQC,IAAR,CAAa,QAAb,EAAuBH,IAAvB;AAEA,MAAII,OAAO,mBAAYC,SAAZ,EAAuBL,IAAvB,CAAX;;AAEA,MAAIhB,SAASoB,IAAT,CAAJ,EAAoB;AAClB,WAAOA,IAAP;AACD;;AACD,SAAO,IAAP;AACD;;eAGcV,W","sourcesContent":["import crypto from 'crypto';\nimport { stat } from 'fs-extra';\nimport { resolve as pathResolve } from 'path';\n\nasync function isExists(p) {\n  try {\n    await stat(p);\n    return true;\n  }\n  catch (e) {\n    return false;\n  }\n}\n\nfunction getLockName(str) {\n  const hash = crypto.createHash('sha256');\n  hash.update(str);\n  return hash.digest('hex');\n}\n\nfunction getLockPath({\n  model, koaServer, senecaClient, senecaServer, customerErrors,\n}) {\n  let name = getLockName([model, koaServer, senecaClient, senecaServer, customerErrors].join('|'));\n  console.info('name: ', name);\n\n  let file = pathResolve(__dirname, name);\n\n  if (isExists(file)) {\n    return file;\n  }\n  return null;\n}\n\nexport { getLockName, getLockPath };\nexport default getLockPath;\n"],"file":"index.js"}