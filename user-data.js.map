{"version":3,"sources":["user-data.js"],"names":["getPath","userDataDir","process","env","APPDATA","platform","HOME","gstPath","setConfig","templateDir","gstConfig","getConfig","gstStr","e","JSON","parse","Error"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA,eAAeA,OAAf,GAAyB;AACvB;AACA,MAAIC,cAAcC,QAAQC,GAAR,CAAYC,OAA9B;;AAEA,MAAI,CAACH,WAAL,EAAkB;AAChB;AACA,QAAIC,QAAQG,QAAR,KAAqB,QAAzB,EAAmC;AACjCJ,oBAAc,mBAAYC,QAAQC,GAAR,CAAYG,IAAxB,EAA8B,qBAA9B,CAAd;AACD,KAFD,CAGA;AAHA,SAIK;AACHL,sBAAc,YAAd;AACD;AACF;;AAED,MAAIM,UAAU,mBAAYN,WAAZ,EAAyB,gCAAzB,CAAd;AACA,SAAOM,OAAP;AACD;;AAED,eAAeC,SAAf,CAAyB;AAAEC;AAAF,CAAzB,EAA0C;AACxC,MAAIF,UAAU,MAAMP,SAApB;AACA,MAAIU,YAAY,MAAMC,UAAUJ,OAAV,CAAtB;AACAG,YAAUD,WAAV,GAAwBA,WAAxB;AACA,QAAM,wBAAUF,OAAV,EAAmBG,SAAnB,CAAN;AACA,SAAOA,SAAP;AACD;;AAED,eAAeC,SAAf,CAAyBJ,OAAzB,EAAkC;AAChC,MAAI,CAACA,OAAL,EAAc;AACZ;AACAA,cAAU,MAAMP,SAAhB;AACD;;AAED,MAAIY,SAAS,EAAb;;AACA,MAAI;AACF,UAAM,mBAAKL,OAAL,CAAN;AACAK,aAAS,MAAM,uBAASL,OAAT,CAAf;AACD,GAHD,CAIA,OAAOM,CAAP,EAAU;AACRD,aAAS,IAAT;AACD;;AAED,MAAIF,SAAJ;;AACA,MAAI;AACFA,gBAAYI,KAAKC,KAAL,CAAWH,MAAX,CAAZ;AACD,GAFD,CAGA,OAAOC,CAAP,EAAU;AACR,UAAM,IAAIG,KAAJ,CAAW,GAAET,OAAQ,wBAArB,CAAN;AACD;;AAED,SAAOG,SAAP;AACD","sourcesContent":["import { stat, readFile, writeJSON } from 'fs-extra';\nimport { resolve as pathResolve } from 'path';\n\nasync function getPath() {\n  // windows\n  let userDataDir = process.env.APPDATA;\n\n  if (!userDataDir) {\n    // mac\n    if (process.platform === 'darwin') {\n      userDataDir = pathResolve(process.env.HOME, 'Library/Preferences');\n    }\n    // linux\n    else {\n      userDataDir = '/var/local';\n    }\n  }\n\n  let gstPath = pathResolve(userDataDir, '.generate-server-template.json');\n  return gstPath;\n}\n\nasync function setConfig({ templateDir }) {\n  let gstPath = await getPath();\n  let gstConfig = await getConfig(gstPath);\n  gstConfig.templateDir = templateDir;\n  await writeJSON(gstPath, gstConfig);\n  return gstConfig;\n}\n\nasync function getConfig(gstPath) {\n  if (!gstPath) {\n    // eslint-disable-next-line no-param-reassign\n    gstPath = await getPath();\n  }\n\n  let gstStr = '';\n  try {\n    await stat(gstPath);\n    gstStr = await readFile(gstPath);\n  }\n  catch (e) {\n    gstStr = '{}';\n  }\n\n  let gstConfig;\n  try {\n    gstConfig = JSON.parse(gstStr);\n  }\n  catch (e) {\n    throw new Error(`${gstPath} is not a valid config`);\n  }\n\n  return gstConfig;\n}\n\nexport { setConfig, getConfig };\n"],"file":"user-data.js"}