{"version":3,"sources":["generate-lock.js"],"names":["tempDir","__dirname","options","koaServer","senecaClient","senecaServer","model","arr","ensureTargetDir","cpBase","buildComponents","buildConfigFile","buildIndexJs","Promise","each","option","console","info","targetDir","Object","keys","join","fun","lockPath","e","warn"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AASA,MAAMA,UAAU,mBAAYC,SAAZ,EAAuB,SAAvB,CAAhB;AAEA,IAAIC,UAAU,CACZ;AAAEC,aAAW;AAAb,CADY,EAEZ;AAAEA,aAAW,IAAb;AAAmBC,gBAAc;AAAjC,CAFY,EAGZ;AAAEC,gBAAc;AAAhB,CAHY,EAIZ;AACA;AACA;AAAEF,aAAW,IAAb;AAAmBG,SAAO;AAA1B,CANY,EAOZ;AAAEH,aAAW,IAAb;AAAmBC,gBAAc,IAAjC;AAAuCE,SAAO;AAA9C,CAPY,EAQZ;AAAED,gBAAc,IAAhB;AAAsBC,SAAO;AAA7B,CARY,CAAd;AAYA,IAAIC,MAAM,CAACC,sBAAD,EAAkBC,aAAlB,EAA0BC,sBAA1B,EAA2CC,sBAA3C,EAA4DC,mBAA5D,CAAV,C,CAEA;;AACAC,kBAAQC,IAAR,CAAaZ,OAAb,EAAsB,MAAOa,MAAP,IAAkB;AACtCC,UAAQC,IAAR,CAAa,UAAb,EAAyBF,MAAzB;AAEA,MAAIG,YAAY,mBAAYlB,OAAZ,EAAqBmB,OAAOC,IAAP,CAAYL,MAAZ,EAAoBM,IAApB,CAAyB,GAAzB,CAArB,CAAhB;AACA,QAAM,mBAAM,UAASH,SAAU,EAAzB,CAAN;;AACA,MAAI;AACF,UAAML,kBAAQC,IAAR,CAAaP,GAAb,EAAmBe,GAAD,IAAS;AAC/B,aAAOA,IAAIJ,SAAJ,EAAeH,MAAf,CAAP;AACD,KAFK,CAAN;AAIA,QAAIQ,WAAW,MAAM,wBAAYR,MAAZ,CAArB;AACAC,YAAQC,IAAR,CAAa,YAAb,EAA2BM,QAA3B;;AACA,QAAIA,QAAJ,EAAc;AACZ,YAAM,mBAAM,UAASA,QAAS,EAAxB,CAAN;AACD;;AAED,UAAM,yBAAaL,SAAb,EAAwBH,MAAxB,CAAN;AACA,UAAM,iBAAG,mBAAYG,SAAZ,EAAuB,WAAvB,CAAH,EAAwCK,QAAxC,CAAN;AACD,GAbD,CAcA,OAAOC,CAAP,EAAU;AACRR,YAAQS,IAAR,CAAaD,CAAb;AACD;;AACD,QAAM,mBAAM,UAASN,SAAU,EAAzB,CAAN;AACD,CAvBD","sourcesContent":["import Promise from 'bluebird';\nimport { resolve as pathResolve } from 'path';\nimport { exec, cp } from 'shelljs';\nimport { getLockPath } from './yarn-lock/index';\n\nimport {\n  ensureTargetDir,\n  cpBase,\n  buildComponents,\n  buildConfigFile,\n  buildIndexJs,\n  buildPackage,\n} from './build';\n\nconst tempDir = pathResolve(__dirname, '../dist');\n\nlet options = [\n  { koaServer: true },\n  { koaServer: true, senecaClient: true },\n  { senecaServer: true },\n  // same as {senecaServer: true}\n  // { senecaServer: true, senecaClient: true },\n  { koaServer: true, model: true },\n  { koaServer: true, senecaClient: true, model: true },\n  { senecaServer: true, model: true },\n  // same as {senecaServer: true}\n  // { senecaServer: true, model: true },\n];\nlet arr = [ensureTargetDir, cpBase, buildComponents, buildConfigFile, buildIndexJs];\n\n// must be each, because build use same memory\nPromise.each(options, async (option) => {\n  console.info('option: ', option);\n\n  let targetDir = pathResolve(tempDir, Object.keys(option).join('-'));\n  await exec(`rm -rf ${targetDir}`);\n  try {\n    await Promise.each(arr, (fun) => {\n      return fun(targetDir, option);\n    });\n\n    let lockPath = await getLockPath(option);\n    console.info('lockPath: ', lockPath);\n    if (lockPath) {\n      await exec(`rm -rf ${lockPath}`);\n    }\n\n    await buildPackage(targetDir, option);\n    await cp(pathResolve(targetDir, 'yarn.lock'), lockPath);\n  }\n  catch (e) {\n    console.warn(e);\n  }\n  await exec(`rm -rf ${targetDir}`);\n});\n"],"file":"generate-lock.js"}