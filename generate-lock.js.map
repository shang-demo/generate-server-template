{"version":3,"sources":["generate-lock.js"],"names":["templateDir","process","env","TEMPLATE_DIR","console","info","options","koaServer","senecaClient","senecaServer","model","Promise","map","option","tempDir","targetDir","Object","keys","join","builder","Builder","assign","disableLock","lockPath","run","catch","e","warn","exit"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,MAAMA,cAAcC,QAAQC,GAAR,CAAYC,YAAhC;AACAC,QAAQC,IAAR,CAAa,eAAb,EAA8BL,WAA9B;AAEA,IAAIM,UAAU,CACZ;AAAEC,aAAW;AAAb,CADY,EAEZ;AAAEA,aAAW,IAAb;AAAmBC,gBAAc;AAAjC,CAFY,EAGZ;AAAEC,gBAAc;AAAhB,CAHY,EAIZ;AACA;AACA;AAAEF,aAAW,IAAb;AAAmBG,SAAO;AAA1B,CANY,EAOZ;AAAEH,aAAW,IAAb;AAAmBC,gBAAc,IAAjC;AAAuCE,SAAO;AAA9C,CAPY,EAQZ;AAAED,gBAAc,IAAhB;AAAsBC,SAAO;AAA7B,CARY,CAAd;;AAaAC,kBAAQC,GAAR,CAAYN,OAAZ,EAAqB,MAAOO,MAAP,IAAkB;AACrC,MAAIC,UAAU,mBAAYd,WAAZ,EAAyB,KAAzB,CAAd;AACA,MAAIe,YAAY,mBAAYD,OAAZ,EAAqBE,OAAOC,IAAP,CAAYJ,MAAZ,EAAoBK,IAApB,CAAyB,GAAzB,CAArB,CAAhB;AAEAd,UAAQC,IAAR,CAAa,UAAb,EAAyBQ,MAAzB;AACA,QAAMM,UAAU,IAAIC,gBAAJ,CAAYJ,OAAOK,MAAP,CAAcR,MAAd,EAAsB;AAChDb,eADgD;AAEhDe,aAFgD;AAGhDO,iBAAa;AAHmC,GAAtB,CAAZ,CAAhB;AAMA,QAAM,gBAAM,UAASP,SAAU,EAAzB,CAAN;AACA,MAAIQ,WAAW,MAAM,wBAAYV,MAAZ,CAArB;AACAT,UAAQC,IAAR,CAAa,YAAb,EAA2BkB,QAA3B;;AACA,MAAIA,QAAJ,EAAc;AACZ,UAAM,gBAAM,UAASA,QAAS,EAAxB,CAAN;AACD;;AAED,QAAMJ,QAAQK,GAAR,EAAN;AACA,QAAM,gBAAM,MAAK,mBAAYT,SAAZ,EAAuB,WAAvB,CAAoC,IAAGQ,QAAS,EAA3D,CAAN;AACA,QAAM,gBAAM,UAASR,SAAU,EAAzB,CAAN;AACD,CArBD,EAqBGU,KArBH,CAqBUC,CAAD,IAAO;AACdtB,UAAQuB,IAAR,CAAaD,CAAb;AACAzB,UAAQ2B,IAAR,CAAa,CAAb;AACD,CAxBD","sourcesContent":["import Promise from 'bluebird';\nimport { resolve as pathResolve } from 'path';\nimport { exec } from './util';\nimport { getLockPath } from './yarn-lock/index';\n\nimport Builder from './Builder';\n\nconst templateDir = process.env.TEMPLATE_DIR;\nconsole.info('templateDir: ', templateDir);\n\nlet options = [\n  { koaServer: true },\n  { koaServer: true, senecaClient: true },\n  { senecaServer: true },\n  // same as {senecaServer: true}\n  // { senecaServer: true, senecaClient: true },\n  { koaServer: true, model: true },\n  { koaServer: true, senecaClient: true, model: true },\n  { senecaServer: true, model: true },\n  // same as {senecaServer: true}\n  // { senecaServer: true, model: true },\n];\n\nPromise.map(options, async (option) => {\n  let tempDir = pathResolve(templateDir, '../');\n  let targetDir = pathResolve(tempDir, Object.keys(option).join('-'));\n\n  console.info('option: ', option);\n  const builder = new Builder(Object.assign(option, {\n    templateDir,\n    targetDir,\n    disableLock: true,\n  }));\n\n  await exec(`rm -rf ${targetDir}`);\n  let lockPath = await getLockPath(option);\n  console.info('lockPath: ', lockPath);\n  if (lockPath) {\n    await exec(`rm -rf ${lockPath}`);\n  }\n\n  await builder.run();\n  await exec(`cp ${pathResolve(targetDir, 'yarn.lock')} ${lockPath}`);\n  await exec(`rm -rf ${targetDir}`);\n}).catch((e) => {\n  console.warn(e);\n  process.exit(1);\n});\n"],"file":"generate-lock.js"}